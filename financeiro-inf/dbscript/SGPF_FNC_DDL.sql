CREATE TABLE SGPF_FNC.BANCO (
    BANC_ID_BANCO       CHAR (36) NOT NULL,
    BANC_SG_BANCO       VARCHAR2 (10 BYTE) NOT NULL,
    BANC_NM_BANCO       VARCHAR2 (100) NOT NULL,
    BANC_DT_CRIACAO     DATE NOT NULL,
    BANC_DT_ATUALIZACAO DATE,
    BANC_NR_VERSAO      NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.BANCO IS 'Banco de relacionamento do usuário.';
COMMENT ON COLUMN SGPF_FNC.BANCO.BANC_ID_BANCO IS 'Identificador do banco.';
COMMENT ON COLUMN SGPF_FNC.BANCO.BANC_SG_BANCO IS 'Sigla do banco.';
COMMENT ON COLUMN SGPF_FNC.BANCO.BANC_NM_BANCO IS 'Nome do banco.';
COMMENT ON COLUMN SGPF_FNC.BANCO.BANC_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.BANCO.BANC_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.BANCO.BANC_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.BANCO ADD CONSTRAINT PK_BANC PRIMARY KEY (BANC_ID_BANCO);

CREATE TABLE SGPF_FNC.CONTA (
    CONT_ID_CONTA       CHAR (36) NOT NULL,
    BANC_ID_BANCO       CHAR (36) NOT NULL,
    CONT_NM_CONTA       VARCHAR2 (100) NOT NULL,
    CONT_DS_CONTA       VARCHAR2 (4000),
    CONT_NR_AGENCIA     VARCHAR2 (15) NOT NULL,
    CONT_NR_CONTA       VARCHAR2 (15) NOT NULL,
    CONT_DT_CRIACAO     DATE NOT NULL,
    CONT_DT_ATUALIZACAO DATE,
    CONT_NR_VERSAO      NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.CONTA IS 'Conta de relacionamento do usuário.';
COMMENT ON COLUMN SGPF_FNC.CONTA.CONT_ID_CONTA IS 'Identificador da conta.';
COMMENT ON COLUMN SGPF_FNC.CONTA.BANC_ID_BANCO IS 'Identificador do banco.';
COMMENT ON COLUMN SGPF_FNC.CONTA.CONT_NM_CONTA IS 'Nome da conta.';
COMMENT ON COLUMN SGPF_FNC.CONTA.CONT_DS_CONTA IS 'Descrição da conta.';
COMMENT ON COLUMN SGPF_FNC.CONTA.CONT_NR_AGENCIA IS 'Número da agẽncia da conta.';
COMMENT ON COLUMN SGPF_FNC.CONTA.CONT_NR_CONTA IS 'Número da conta';
COMMENT ON COLUMN SGPF_FNC.CONTA.CONT_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.CONTA.CONT_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.CONTA.CONT_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.CONTA ADD CONSTRAINT PK_CONT PRIMARY KEY (CONT_ID_CONTA);

CREATE TABLE SGPF_FNC.SALDO_MENSAL_CONTA (
    SAMC_ID_SALDO_MES   CHAR (36) NOT NULL,
    CONT_ID_CONTA       CHAR (36) NOT NULL,
    SAMC_NR_ANO         NUMBER (4) NOT NULL,
    SAMC_IN_MES         NUMBER (2) NOT NULL,
    SAMC_VL_INICIAL     NUMBER (38,4) NOT NULL,
    SAMC_VL_FINAL       NUMBER (38,4),
    SAMC_DT_CRIACAO     DATE NOT NULL,
    SAMC_DT_ATUALIZACAO DATE,
    SAMC_NR_VERSAO      NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.SALDO_MENSAL_CONTA IS 'Saldo de início e de fim de um mês em uma conta de relacionamento.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.SAMC_ID_SALDO_MES IS 'Identificador do saldo mensal da conta.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.CONT_ID_CONTA IS 'Identificador da conta.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.SAMC_NR_ANO IS 'Ano do saldo.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.SAMC_IN_MES IS 'Mês do saldo. Valores aceitos: 0 - Janeiro, 1 - Fevereiro, 2 - Março, 3 - Abril, 4 - Maio, 5 - Junho, 6 - Julho, 7 - Agosto, 8 - Setembro, 9 - Outubro, 10 - Novembro, 11 - Dezembro.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.SAMC_VL_INICIAL IS 'Valor do saldo no início do mês.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.SAMC_VL_FINAL IS 'Valor do saldo no fim do mês.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.SAMC_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.SAMC_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.SALDO_MENSAL_CONTA.SAMC_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.SALDO_MENSAL_CONTA ADD CONSTRAINT PK_SAMC PRIMARY KEY (SAMC_ID_SALDO_MES);

ALTER TABLE SGPF_FNC.SALDO_MENSAL_CONTA ADD CONSTRAINT CK_SAMC_IN_MES CHECK (SAMC_IN_MES IN (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11));

CREATE TABLE SGPF_FNC.GRUPO_OPERACAO (
    GROP_ID_GRUPO_OPERACAO CHAR (36) NOT NULL,
    GROP_NM_GRUPO_OPERACAO VARCHAR2 (100) NOT NULL,
    GROP_DT_CRIACAO        DATE NOT NULL,
    GROP_DT_ATUALIZACAO    DATE,
    GROP_NR_VERSAO         NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.GRUPO_OPERACAO IS 'Grupo para organização de operações.';
COMMENT ON COLUMN SGPF_FNC.GRUPO_OPERACAO.GROP_ID_GRUPO_OPERACAO IS 'Identificador do grupo de operações.';
COMMENT ON COLUMN SGPF_FNC.GRUPO_OPERACAO.GROP_NM_GRUPO_OPERACAO IS 'Nome do grupo de operações.';
COMMENT ON COLUMN SGPF_FNC.GRUPO_OPERACAO.GROP_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.GRUPO_OPERACAO.GROP_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.GRUPO_OPERACAO.GROP_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.GRUPO_OPERACAO ADD CONSTRAINT PK_GROP PRIMARY KEY (GROP_ID_GRUPO_OPERACAO);

CREATE TABLE SGPF_FNC.OPERACAO (
    OPER_ID_OPERACAO       CHAR (36) NOT NULL,
    GROP_ID_GRUPO_OPERACAO CHAR (36) NOT NULL,
    OPER_IN_AMBITO         CHAR (1) NOT NULL,
    OPER_VL_OPERACAO       NUMBER (38,4) NOT NULL,
    OPER_DT_OPERACAO       DATE NOT NULL,
    OPER_DS_OPERACAO       VARCHAR2 (4000),
    OPER_DT_CRIACAO        DATE NOT NULL,
    OPER_DT_ATUALIZACAO    DATE,
    OPER_NR_VERSAO         NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.OPERACAO IS 'Operação financeira de um valor em um dia.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.OPER_ID_OPERACAO IS 'Identificador da operação.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.GROP_ID_GRUPO_OPERACAO IS 'Identificador do grupo da operação.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.OPER_IN_AMBITO IS 'Indicador do âmbito da operação. Valores aceitos: (I)nterno, (E)xterno.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.OPER_VL_OPERACAO IS 'Valor movimentado na operação.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.OPER_DT_OPERACAO IS 'Data de realização da operação.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.OPER_DS_OPERACAO IS 'Descrição da operação.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.OPER_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.OPER_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO.OPER_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.OPERACAO ADD CONSTRAINT PK_OPER PRIMARY KEY (OPER_ID_OPERACAO);

ALTER TABLE SGPF_FNC.OPERACAO ADD CONSTRAINT CK_OPER_IN_AMBITO CHECK (OPER_IN_AMBITO IN ('I', 'E'));

CREATE TABLE SGPF_FNC.OPERACAO_CONTA (
    CONT_ID_CONTA          CHAR (36) NOT NULL,
    OPER_ID_OPERACAO       CHAR (36) NOT NULL,
    OPCO_IN_TIPO           CHAR (1) NOT NULL,
    OPCO_DT_CRIACAO        DATE NOT NULL,
    OPCO_DT_ATUALIZACAO    DATE,
    OPCO_NR_VERSAO         NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.OPERACAO_CONTA IS 'Operação financeira realizada em uma conta de relacionamento.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO_CONTA.CONT_ID_CONTA IS 'Identificador da conta.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO_CONTA.OPER_ID_OPERACAO IS 'Identificador da operação realizada.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO_CONTA.OPCO_IN_TIPO IS 'Indicador do tipo de operação em relação à conta. Valores aceitos: (C)redito, (D)ebito.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO_CONTA.OPCO_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO_CONTA.OPCO_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.OPERACAO_CONTA.OPCO_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.OPERACAO_CONTA ADD CONSTRAINT PK_OPCO PRIMARY KEY (CONT_ID_CONTA, OPER_ID_OPERACAO);

ALTER TABLE SGPF_FNC.OPERACAO_CONTA ADD CONSTRAINT CK_OPCO_IN_TIPO CHECK (OPCO_IN_TIPO IN ('C', 'D'));

CREATE TABLE SGPF_FNC.TIPO_APLICACAO (
    TIAP_ID_TIPO_APLICACAO CHAR (36) NOT NULL,
    TIAP_NM_TIPO_APLICACAO VARCHAR2 (100) NOT NULL,
    TIAP_DT_CRIACAO        DATE NOT NULL,
    TIAP_DT_ATUALIZACAO    DATE,
    TIAP_NR_VERSAO         NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.TIPO_APLICACAO IS 'Tipo de aplicação financeira.';
COMMENT ON COLUMN SGPF_FNC.TIPO_APLICACAO.TIAP_ID_TIPO_APLICACAO IS 'Identificador do tipo de aplicação.';
COMMENT ON COLUMN SGPF_FNC.TIPO_APLICACAO.TIAP_NM_TIPO_APLICACAO IS 'Nome do tipo de aplicação.';
COMMENT ON COLUMN SGPF_FNC.TIPO_APLICACAO.TIAP_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.TIPO_APLICACAO.TIAP_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.TIPO_APLICACAO.TIAP_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.TIPO_APLICACAO ADD CONSTRAINT PK_TIAP PRIMARY KEY (TIAP_ID_TIPO_APLICACAO);

CREATE TABLE SGPF_FNC.APLICACAO (
    APLI_ID_APLICACAO      CHAR (36) NOT NULL,
    CONT_ID_CONTA          CHAR (36) NOT NULL,
    TIAP_ID_TIPO_APLICACAO CHAR (36) NOT NULL,
    APLI_NM_APLICACAO      VARCHAR2 (100) NOT NULL,
    APLI_DS_APLICACAO      VARCHAR2 (4000),
    APLI_DT_VENCIMENTO     DATE,
    APLI_DT_CRIACAO        DATE NOT NULL,
    APLI_DT_ATUALIZACAO    DATE,
    APLI_NR_VERSAO         NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.APLICACAO IS 'Aplicação financeira.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.APLI_ID_APLICACAO IS 'Identificador da aplicação.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.CONT_ID_CONTA IS 'Identificador da conta.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.TIAP_ID_TIPO_APLICACAO IS 'Identificador do tipo da aplicação.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.APLI_NM_APLICACAO IS 'Nome da aplicação.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.APLI_DS_APLICACAO IS 'Descrição da aplicação.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.APLI_DT_VENCIMENTO IS 'Data de vencimento da aplicação.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.APLI_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.APLI_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.APLICACAO.APLI_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.APLICACAO ADD CONSTRAINT PK_APLI PRIMARY KEY (APLI_ID_APLICACAO);

CREATE TABLE SGPF_FNC.POSICAO_MENSAL_APLICACAO (
    POMA_ID_EXTRATO_APLICACAO CHAR (36) NOT NULL,
    APLI_ID_APLICACAO         CHAR (36) NOT NULL,
    POMA_NR_ANO               NUMBER (4) NOT NULL,
    POMA_IN_MES               NUMBER (2) NOT NULL,
    POMA_VL_APLICADO          NUMBER (38,4),
    POMA_VL_SALDO_ANTERIOR    NUMBER (38,4) NOT NULL,
    POMA_VL_SALDO_BRUTO_FINAL NUMBER (38,4) NOT NULL,
    POMA_VL_IR                NUMBER (38,4) NOT NULL,
    POMA_VL_IOF               NUMBER (38,4) NOT NULL,
    POMA_VL_COME_COTA         NUMBER (38,4) NOT NULL,
    POMA_DT_CRIACAO           DATE NOT NULL,
    POMA_DT_ATUALIZACAO       DATE,
    POMA_NR_VERSAO            NUMBER (38) NOT NULL
);

COMMENT ON TABLE SGPF_FNC.POSICAO_MENSAL_APLICACAO IS 'Posição em um mês de uma aplicação financeira.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_ID_EXTRATO_APLICACAO IS 'Identificador da posição mensal da aplicação.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.APLI_ID_APLICACAO IS 'Identificador da aplicação.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_NR_ANO IS 'Ano da posição.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_IN_MES IS 'Mês da posição. Valores aceitos: 0 - Janeiro, 1 - Fevereiro, 2 - Março, 3 - Abril, 4 - Maio, 5 - Junho, 6 - Julho, 7 - Agosto, 8 - Setembro, 9 - Outubro, 10 - Novembro, 11 - Dezembro.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_VL_APLICADO IS 'Valor aplicado no mês.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_VL_SALDO_ANTERIOR IS 'Valor do saldo do mês alterior.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_VL_SALDO_BRUTO_FINAL IS 'Valor do saldo bruto final no mês.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_VL_IR IS 'Valor do imposto de renda acumulado até o mês.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_VL_IOF IS 'Valor do imposto sobre operação financeira acumulado até o mês.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_VL_COME_COTA IS 'Valor do come-cota realizado no mês.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_DT_CRIACAO IS 'Data de criação do registro.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_DT_ATUALIZACAO IS 'Data de atualização do registro.';
COMMENT ON COLUMN SGPF_FNC.POSICAO_MENSAL_APLICACAO.POMA_NR_VERSAO IS 'Número da versão do registro.';

ALTER TABLE SGPF_FNC.POSICAO_MENSAL_APLICACAO ADD CONSTRAINT PK_POMA PRIMARY KEY (POMA_ID_EXTRATO_APLICACAO);

ALTER TABLE SGPF_FNC.POSICAO_MENSAL_APLICACAO ADD CONSTRAINT CK_POMA_IN_MES CHECK (POMA_IN_MES IN (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11));

-- Foreign Keys

ALTER TABLE SGPF_FNC.CONTA ADD CONSTRAINT FK_BANC_CONT FOREIGN KEY (BANC_ID_BANCO) REFERENCES SGPF_FNC.BANCO (BANC_ID_BANCO);
CREATE INDEX SGPF_FNC.IN_FK_BANC_CONT ON SGPF_FNC.CONTA (BANC_ID_BANCO ASC) TABLESPACE TBSIDX01_SGPF_FNC;

ALTER TABLE SGPF_FNC.SALDO_MENSAL_CONTA ADD CONSTRAINT FK_CONT_SAMC FOREIGN KEY (CONT_ID_CONTA) REFERENCES SGPF_FNC.CONTA (CONT_ID_CONTA);
CREATE INDEX SGPF_FNC.IN_FK_CONT_SAMC ON SGPF_FNC.SALDO_MENSAL_CONTA (CONT_ID_CONTA ASC) TABLESPACE TBSIDX01_SGPF_FNC;

ALTER TABLE SGPF_FNC.OPERACAO ADD CONSTRAINT FK_GROP_OPER FOREIGN KEY (GROP_ID_GRUPO_OPERACAO) REFERENCES SGPF_FNC.GRUPO_OPERACAO (GROP_ID_GRUPO_OPERACAO);
CREATE INDEX SGPF_FNC.IN_FK_GROP_OPER ON SGPF_FNC.OPERACAO (GROP_ID_GRUPO_OPERACAO ASC) TABLESPACE TBSIDX01_SGPF_FNC;

ALTER TABLE SGPF_FNC.OPERACAO_CONTA ADD CONSTRAINT FK_CONT_OPCO FOREIGN KEY (CONT_ID_CONTA) REFERENCES SGPF_FNC.CONTA (CONT_ID_CONTA);
CREATE INDEX SGPF_FNC.IN_FK_CONT_OPCO ON SGPF_FNC.OPERACAO_CONTA (CONT_ID_CONTA ASC) TABLESPACE TBSIDX01_SGPF_FNC;

ALTER TABLE SGPF_FNC.OPERACAO_CONTA ADD CONSTRAINT FK_OPER_OPCO FOREIGN KEY (OPER_ID_OPERACAO) REFERENCES SGPF_FNC.OPERACAO (OPER_ID_OPERACAO);
CREATE INDEX SGPF_FNC.IN_FK_OPER_OPCO ON SGPF_FNC.OPERACAO_CONTA (OPER_ID_OPERACAO ASC) TABLESPACE TBSIDX01_SGPF_FNC;

ALTER TABLE SGPF_FNC.APLICACAO ADD CONSTRAINT FK_CONT_APLI FOREIGN KEY (CONT_ID_CONTA) REFERENCES SGPF_FNC.CONTA (CONT_ID_CONTA);
CREATE INDEX SGPF_FNC.IN_FK_CONT_APLI ON SGPF_FNC.APLICACAO (CONT_ID_CONTA ASC) TABLESPACE TBSIDX01_SGPF_FNC;

ALTER TABLE SGPF_FNC.APLICACAO ADD CONSTRAINT FK_TIAP_APLI FOREIGN KEY (TIAP_ID_TIPO_APLICACAO) REFERENCES SGPF_FNC.TIPO_APLICACAO (TIAP_ID_TIPO_APLICACAO);
CREATE INDEX SGPF_FNC.IN_FK_TIAP_APLI ON SGPF_FNC.APLICACAO (TIAP_ID_TIPO_APLICACAO ASC) TABLESPACE TBSIDX01_SGPF_FNC;

ALTER TABLE SGPF_FNC.POSICAO_MENSAL_APLICACAO ADD CONSTRAINT FK_APLI_POMA FOREIGN KEY (APLI_ID_APLICACAO) REFERENCES SGPF_FNC.APLICACAO (APLI_ID_APLICACAO);
CREATE INDEX SGPF_FNC.IN_FK_APLI_POMA ON SGPF_FNC.POSICAO_MENSAL_APLICACAO (APLI_ID_APLICACAO ASC) TABLESPACE TBSIDX01_SGPF_FNC;

-- Grants

GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.APLICACAO TO RUSER_SGPF_FNC;
GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.BANCO TO RUSER_SGPF_FNC;
GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.CONTA TO RUSER_SGPF_FNC;
GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.GRUPO_OPERACAO TO RUSER_SGPF_FNC;
GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.OPERACAO TO RUSER_SGPF_FNC;
GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.OPERACAO_CONTA TO RUSER_SGPF_FNC;
GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.POSICAO_MENSAL_APLICACAO TO RUSER_SGPF_FNC;
GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.SALDO_MENSAL_CONTA TO RUSER_SGPF_FNC;
GRANT SELECT, INSERT, UPDATE, DELETE ON SGPF_FNC.TIPO_APLICACAO TO RUSER_SGPF_FNC;
